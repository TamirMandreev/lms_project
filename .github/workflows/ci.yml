name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root

      - name: Run tests
        run: pytest --ds=config.test_settings

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in DockerHub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/lms_project:${{ github.sha }}\

      - name: Push Docker image in DockerHub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/lms_project:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          sudo usermod -aG docker ${{ secrets.SSH_USER }} || true
          sudo systemctl start docker || true
          sudo chown root:docker /var/run/docker.sock || true
          sudo chmod 660 /var/run/docker.sock || true
          newgrp docker || true
          
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/lms_project:${{ github.sha }}
          docker stop lms_project || true
          docker rm lms_project || true
          docker run -d --name lms_project -p 80:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/lms_project:${{ github.sha }}
          EOF